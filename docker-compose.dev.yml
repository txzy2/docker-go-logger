services:
  logv2_app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: logv2_app 
    restart: always
    tty: true
    working_dir: /var/www/
    volumes:
      - ./app:/var/www
      - /var/www/tmp 
    networks:
      - log_net_v2 

  logv2_db:
    build:
      context: ./pgsql
      dockerfile: Dockerfile
      args:
        DB_VERSION_PG_SQL: ${DB_VERSION_PG_SQL}
    restart: always
    container_name: logv2_db
    tty: true
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - log_net_v2 


  #Nginx Service
  logv2_web:
    image: nginx:alpine
    container_name: logv2_webserver 
    restart: always
    tty: true
    ports:
      - "${NGINX_PORT}:80"
      # - "5443:443"
    volumes:
      - ./app:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/logs/:/var/log/nginx
    networks:
      - log_net_v2 

  #ADMINER
  logv2_adm:
    image: ${ADMINER_VERSION}
    container_name: logv2_adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - log_net_v2

networks:
  log_net_v2:
    driver: bridge
